
// from LibraryEx
$EXTERN Seq, Map, Fetch;

$ENTRY Dowork {
  (e.first) (e.second) e.tail =
    <Dowork <CommonHead (e.first) (e.second)> e.tail>;
  e.any = e.any;
}

CommonHead {
  (#CmdSentence e.tail1 )(#CmdSentence e.tail2 ) = 
    ( #CmdSentence <DoCommonHead ( e.tail1 )( e.tail2 )>);
  (e.any)(e.other) = (e.any)(e.other);
}

DoCommonHead {
  (t.Common e.tail1 )(t.Common e.tail2 ) = 
    t.Common <DoCommonHead ( e.tail1 )( e.tail2 )>;
  (e.any)(e.other) = ( #CmdSentence e.any)( #CmdSentence e.other);
}









/*


$ENTRY FormTree {
  e.Sentences = 
    <Fetch
      <PatternSeq e.Sentences>
      <Seq
        {	
        }
        {e.all = e.all;}
      >  
    >;	
}

PatternSeq {
  ((e.Pattern)(e.Result)) e.tail =
    (e.Pattern (e.Result)) <PatternSeq e.tail>;
  = ;
}

DoFormTree {
  (e.Sentence) = (e.Sentence);
  (e.Patt1-B (e.Res1) e.Patt1-E)(e.Patt2-B (e.Res2) e.Patt2-E) e.tail= 
    <DoFormTree (()) e.tail>;
}
  
LinkBrackets {
  e.left (#TkOpenBracket s.Num) e.body (#TkCloseBracket s.Num) e.right =
    <LinkBrackets e.left> 
    (#Brackets <LinkBrackets e.body>)    
    <LinkBrackets e.right>;
  e.smth = e.smth;
}
  
ChangePatt {
  e.Pattern = 
    <LinkBrackets
      <Map
        {
          (#TkChar s.char) = (#Atom #TkChar s.char);
          (#TkNumber s.value) = (#Atom #TkNumber s.value);
          (#TkName s.name) = (#Atom #TkName s.name);
          (#TkIdentifier s.ident) = (#Atom #TkIdentifier s.ident);
          (#TkVariable s.Mode e.Index) = 
            (<Fetch s.Mode { 'e' = #E; 't' = #T; 's' = #S; }> (e.Index) ());
          (#TkOpenBracket s.num) = (#TkOpenBracket s.num);
          (#TkCloseBracket s.num) = (#TkCloseBracket s.num);
        }
        e.Pattern
      >
    >;
}

*/