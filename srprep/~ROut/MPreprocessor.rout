v ROUT3 Module Refal 0.1
r file ~ROut\MPreprocessor.rout

b Local::MPreprocessor::ConcatSpace2
c $Local::MPreprocessor::ConcatSpace2$ {
c 	( $ADT::__StructureBrackets$ e.$Index::Space1$ ) ( $ADT::__StructureBrackets$ e.$Index::Space2$ ) =
c 		( $ADT::__StructureBrackets$ e.$Index::Space1$ e.$Index::Space2$ ) ;
c }

b Local::MPreprocessor::ConcatSpace
c $Local::MPreprocessor::ConcatSpace$ {
c 	e.$Index::Spaces$ =
c 		<$Entry::MLambda::Reduce$ $Local::MPreprocessor::ConcatSpace2$ ( $ADT::__StructureBrackets$ ) e.$Index::Spaces$ > ;
c }

b Local::MPreprocessor::ScanFunctionBody-SwRename
c $Local::MPreprocessor::ScanFunctionBody-SwRename$ {
c 	( $ADT::__StructureBrackets$ t.$Index::SymTable$ $Ident::Success$ e.$Index::NewName$ ) t.$Index::Import$ ( $ADT::__StructureBrackets$ $Ident::Name$ t.$Index::NameSpace$ e.$Index::Name$ ) e.$Index::Tokens$ =
c 		( $ADT::__StructureBrackets$ $Ident::Name$ t.$Index::NameSpace$ e.$Index::NewName$ ) <$Local::MPreprocessor::ScanFunctionBody$ t.$Index::SymTable$ t.$Index::Import$ e.$Index::Tokens$ > ;
c 	( $ADT::__StructureBrackets$ t.$Index::SymTable$ $Ident::Fails$ $Ident::NoName$ ) t.$Index::Import$ ( $ADT::__StructureBrackets$ $Ident::Name$ t.$Index::NameSpace$ e.$Index::Name$ ) e.$Index::Tokens$ =
c 		( $ADT::__StructureBrackets$ $Ident::Name$ t.$Index::NameSpace$ e.$Index::Name$ ) <$Entry::MError::Error$ 'Undeclared name ' e.$Index::Name$ > <$Local::MPreprocessor::ScanFunctionBody$ t.$Index::SymTable$ t.$Index::Import$ e.$Index::Tokens$ > ;
c }

b Local::MPreprocessor::ScanFunctionBody
c $Local::MPreprocessor::ScanFunctionBody$ {
c 	t.$Index::SymTable$ t.$Index::Import$ ( $ADT::__StructureBrackets$ $Ident::Name$ t.$Index::NameSpace$ e.$Index::Name$ ) e.$Index::Tokens$ =
c 		<$Local::MPreprocessor::ScanFunctionBody-SwRename$ ( $ADT::__StructureBrackets$ <$Entry::MSymTable::ConvertName$ t.$Index::SymTable$ e.$Index::Name$ > ) t.$Index::Import$ ( $ADT::__StructureBrackets$ $Ident::Name$ t.$Index::NameSpace$ e.$Index::Name$ ) e.$Index::Tokens$ > ;
c 	t.$Index::SymTable$ t.$Index::Import$ ( $ADT::__StructureBrackets$ $Ident::Punctuation$ t.$Index::BracketSpace$ '}' ) e.$Index::Tokens$ =
c 		( $ADT::__StructureBrackets$ $Ident::Punctuation$ t.$Index::BracketSpace$ '}' ) <$Local::MPreprocessor::DoPreprocessBody$ t.$Index::SymTable$ t.$Index::Import$ e.$Index::Tokens$ > ;
c 	t.$Index::SymTable$ t.$Index::Import$ t.$Index::OtherToken$ e.$Index::Tokens$ =
c 		t.$Index::OtherToken$ <$Local::MPreprocessor::ScanFunctionBody$ t.$Index::SymTable$ t.$Index::Import$ e.$Index::Tokens$ > ;
c 	t.$Index::SymTable$ t.$Index::Import$ =
c 		<$Local::MPreprocessor::DoPreprocessBody$ t.$Index::SymTable$ t.$Index::Import$ > ;
c }

b Local::MPreprocessor::SwAddForward
c $Local::MPreprocessor::SwAddForward$ {
c 	t.$Index::SymTable$ $Ident::Success$ ( $ADT::__StructureBrackets$ e.$Index::Name$ ) =
c 		t.$Index::SymTable$ ;
c 	t.$Index::SymTable$ $Ident::Fails$ $Ident::IdentifierRedeclared$ ( $ADT::__StructureBrackets$ e.$Index::Name$ ) =
c 		<$Entry::MError::Error$ 'Can\'t declare name ' e.$Index::Name$ ' -- identifier redeclared' > t.$Index::SymTable$ ;
c }

b Local::MPreprocessor::AddForward
c $Local::MPreprocessor::AddForward$ {
c 	t.$Index::SymTable$ e.$Index::Name$ =
c 		<$Local::MPreprocessor::SwAddForward$ <$Entry::MSymTable::AddForward$ t.$Index::SymTable$ e.$Index::Name$ > ( $ADT::__StructureBrackets$ e.$Index::Name$ ) > ;
c }

b Local::MPreprocessor::GenerateEmpty
c $Local::MPreprocessor::GenerateEmpty$ {
c 	$Ident::Entry$ t.$Index::NameSpace$ e.$Index::Function$ =
c 		( $ADT::__StructureBrackets$ $Ident::Directive$ t.$Index::NameSpace$ $Ident::Entry$ ) ( $ADT::__StructureBrackets$ $Ident::Name$ ( $ADT::__StructureBrackets$ ' ' ) e.$Index::Function$ ) ( $ADT::__StructureBrackets$ $Ident::Punctuation$ ( $ADT::__StructureBrackets$ ' ' ) '{' ) ( $ADT::__StructureBrackets$ $Ident::Punctuation$ ( $ADT::__StructureBrackets$ ' ' ) '}' ) ;
c 	$Ident::Local$ t.$Index::NameSpace$ e.$Index::Function$ =
c 		( $ADT::__StructureBrackets$ $Ident::Name$ t.$Index::NameSpace$ e.$Index::Function$ ) ( $ADT::__StructureBrackets$ $Ident::Punctuation$ ( $ADT::__StructureBrackets$ ' ' ) '{' ) ( $ADT::__StructureBrackets$ $Ident::Punctuation$ ( $ADT::__StructureBrackets$ ' ' ) '}' ) ;
c }

b Local::MPreprocessor::EmptyFunctions
c $Local::MPreprocessor::EmptyFunctions$ {
c 	s.$Index::ScopeType$ t.$Index::SymTable$ t.$Index::Imports$ ( $ADT::__StructureBrackets$ $Ident::Name$ t.$Index::NameSpace$ e.$Index::Function$ ) ( $ADT::__StructureBrackets$ $Ident::Punctuation$ t.$Index::CommaSpace$ ',' ) e.$Index::Tokens$ =
c 		<$Local::MPreprocessor::GenerateEmpty$ s.$Index::ScopeType$ t.$Index::NameSpace$ e.$Index::Function$ > ( $ADT::__StructureBrackets$ $Ident::Nothing$ t.$Index::CommaSpace$ ) <$Local::MPreprocessor::EmptyFunctions$ s.$Index::ScopeType$ <$Local::MPreprocessor::AddForward$ t.$Index::SymTable$ e.$Index::Function$ > t.$Index::Imports$ e.$Index::Tokens$ > ;
c 	s.$Index::ScopeType$ t.$Index::SymTable$ t.$Index::Imports$ ( $ADT::__StructureBrackets$ $Ident::Name$ t.$Index::NameSpace$ e.$Index::Function$ ) ( $ADT::__StructureBrackets$ $Ident::Punctuation$ t.$Index::SemicolonSpace$ ';' ) e.$Index::Tokens$ =
c 		<$Local::MPreprocessor::GenerateEmpty$ s.$Index::ScopeType$ t.$Index::NameSpace$ e.$Index::Function$ > ( $ADT::__StructureBrackets$ $Ident::Nothing$ t.$Index::SemicolonSpace$ ) <$Local::MPreprocessor::DoPreprocessBody$ <$Local::MPreprocessor::AddForward$ t.$Index::SymTable$ e.$Index::Function$ > t.$Index::Imports$ e.$Index::Tokens$ > ;
c 	s.$Index::ScopeType$ t.$Index::SymTable$ t.$Index::Imports$ e.$Index::Tokens$ =
c 		<$Entry::MError::Error$ 'Expected comma-separated function names' > <$Local::MPreprocessor::DoPreprocessBody$ t.$Index::SymTable$ t.$Index::Imports$ e.$Index::Tokens$ > ;
c }

b Local::MPreprocessor::ForwardFunctions
c $Local::MPreprocessor::ForwardFunctions$ {
c 	t.$Index::SymTable$ t.$Index::Imports$ ( $ADT::__StructureBrackets$ $Ident::Name$ t.$Index::NameSpace$ e.$Index::Function$ ) ( $ADT::__StructureBrackets$ $Ident::Punctuation$ t.$Index::CommaSpace$ ',' ) e.$Index::Tokens$ =
c 		( $ADT::__StructureBrackets$ $Ident::Nothing$ <$Local::MPreprocessor::ConcatSpace$ t.$Index::NameSpace$ t.$Index::CommaSpace$ > ) <$Local::MPreprocessor::ForwardFunctions$ <$Local::MPreprocessor::AddForward$ t.$Index::SymTable$ e.$Index::Function$ > t.$Index::Imports$ e.$Index::Tokens$ > ;
c 	t.$Index::SymTable$ t.$Index::Imports$ ( $ADT::__StructureBrackets$ $Ident::Name$ t.$Index::NameSpace$ e.$Index::Function$ ) ( $ADT::__StructureBrackets$ $Ident::Punctuation$ t.$Index::SemicolonSpace$ ';' ) e.$Index::Tokens$ =
c 		( $ADT::__StructureBrackets$ $Ident::Nothing$ <$Local::MPreprocessor::ConcatSpace$ t.$Index::NameSpace$ t.$Index::SemicolonSpace$ > ) <$Local::MPreprocessor::DoPreprocessBody$ <$Local::MPreprocessor::AddForward$ t.$Index::SymTable$ e.$Index::Function$ > t.$Index::Imports$ e.$Index::Tokens$ > ;
c 	t.$Index::SymTable$ t.$Index::Imports$ e.$Index::Tokens$ =
c 		<$Entry::MError::Error$ 'Expected comma-separated function names' > <$Local::MPreprocessor::DoPreprocessBody$ t.$Index::SymTable$ t.$Index::Imports$ e.$Index::Tokens$ > ;
c }

b Local::MPreprocessor::SwAddExport
c $Local::MPreprocessor::SwAddExport$ {
c 	t.$Index::SymTable$ $Ident::Success$ ( $ADT::__StructureBrackets$ e.$Index::Name$ ) ( $ADT::__StructureBrackets$ e.$Index::Module$ ) =
c 		t.$Index::SymTable$ ;
c 	t.$Index::SymTable$ $Ident::Fails$ $Ident::IdentifierRedeclared$ ( $ADT::__StructureBrackets$ e.$Index::Name$ ) ( $ADT::__StructureBrackets$ e.$Index::Module$ ) =
c 		<$Entry::MError::Error$ 'Can\'t import names from ' e.$Index::Module$ ': identifier ' e.$Index::Name$ ' redeclared.' > t.$Index::SymTable$ ;
c }

b Local::MPreprocessor::AddExport
c $Local::MPreprocessor::AddExport$ {
c 	t.$Index::SymTable$ ( $ADT::__StructureBrackets$ e.$Index::Name$ ) e.$Index::Module$ =
c 		<$Local::MPreprocessor::SwAddExport$ <$Entry::MSymTable::AddExport$ t.$Index::SymTable$ ( $ADT::__StructureBrackets$ e.$Index::Name$ ) e.$Index::Module$ > ( $ADT::__StructureBrackets$ e.$Index::Name$ ) ( $ADT::__StructureBrackets$ e.$Index::Module$ ) > ;
c }

b Local::MPreprocessor::ExportFunctions
c $Local::MPreprocessor::ExportFunctions$ {
c 	t.$Index::SymTable$ t.$Index::Imports$ ( $ADT::__StructureBrackets$ e.$Index::Import$ ) ( $ADT::__StructureBrackets$ $Ident::Name$ t.$Index::NameSpace$ e.$Index::Function$ ) ( $ADT::__StructureBrackets$ $Ident::Punctuation$ t.$Index::CommaSpace$ ',' ) e.$Index::Tokens$ =
c 		( $ADT::__StructureBrackets$ $Ident::Nothing$ <$Local::MPreprocessor::ConcatSpace$ t.$Index::NameSpace$ t.$Index::CommaSpace$ > ) <$Local::MPreprocessor::ExportFunctions$ <$Local::MPreprocessor::AddExport$ t.$Index::SymTable$ ( $ADT::__StructureBrackets$ e.$Index::Function$ ) e.$Index::Import$ > t.$Index::Imports$ ( $ADT::__StructureBrackets$ e.$Index::Import$ ) e.$Index::Tokens$ > ;
c 	t.$Index::SymTable$ t.$Index::Imports$ ( $ADT::__StructureBrackets$ e.$Index::Import$ ) ( $ADT::__StructureBrackets$ $Ident::Name$ t.$Index::NameSpace$ e.$Index::Function$ ) ( $ADT::__StructureBrackets$ $Ident::Punctuation$ t.$Index::SemicolonSpace$ ';' ) e.$Index::Tokens$ =
c 		( $ADT::__StructureBrackets$ $Ident::Nothing$ <$Local::MPreprocessor::ConcatSpace$ t.$Index::NameSpace$ t.$Index::SemicolonSpace$ > ) <$Local::MPreprocessor::DoPreprocessBody$ <$Local::MPreprocessor::AddExport$ t.$Index::SymTable$ ( $ADT::__StructureBrackets$ e.$Index::Function$ ) e.$Index::Import$ > t.$Index::Imports$ e.$Index::Tokens$ > ;
c 	t.$Index::SymTable$ t.$Index::Imports$ ( $ADT::__StructureBrackets$ e.$Index::Import$ ) e.$Index::Tokens$ =
c 		<$Entry::MError::Error$ 'Expected comma-separated function names' > <$Local::MPreprocessor::DoPreprocessBody$ t.$Index::SymTable$ t.$Index::Imports$ e.$Index::Tokens$ > ;
c }

b Local::MPreprocessor::DoPreprocessBody
c $Local::MPreprocessor::DoPreprocessBody$ {
c 	t.$Index::SymTable$ t.$Index::Imports$ ( $ADT::__StructureBrackets$ $Ident::Unexpected$ t.$Index::Space$ e.$Index::Unexpected$ ) e.$Index::Tokens$ =
c 		<$Entry::MError::Unexpected$ e.$Index::Unexpected$ > ( $ADT::__StructureBrackets$ $Ident::Nothing$ t.$Index::Space$ ) <$Local::MPreprocessor::DoPreprocessBody$ t.$Index::SymTable$ t.$Index::Imports$ e.$Index::Tokens$ > ;
c 	t.$Index::SymTable$ ( $ADT::__StructureBrackets$ e.$Index::Imports-B$ ( $ADT::__StructureBrackets$ e.$Index::Import$ ) e.$Index::Imports-E$ ) ( $ADT::__StructureBrackets$ $Ident::Directive$ t.$Index::FromSpace$ $Ident::From$ ) ( $ADT::__StructureBrackets$ $Ident::Name$ t.$Index::NameSpace$ e.$Index::Import$ ) ( $ADT::__StructureBrackets$ $Ident::Directive$ t.$Index::ExternSpace$ $Ident::Extern$ ) e.$Index::Tokens$ =
c 		( $ADT::__StructureBrackets$ $Ident::Nothing$ <$Local::MPreprocessor::ConcatSpace$ t.$Index::FromSpace$ t.$Index::NameSpace$ t.$Index::ExternSpace$ > ) <$Local::MPreprocessor::ExportFunctions$ t.$Index::SymTable$ ( $ADT::__StructureBrackets$ e.$Index::Imports-B$ ( $ADT::__StructureBrackets$ e.$Index::Import$ ) e.$Index::Imports-E$ ) ( $ADT::__StructureBrackets$ e.$Index::Import$ ) e.$Index::Tokens$ > ;
c 	t.$Index::SymTable$ ( $ADT::__StructureBrackets$ e.$Index::Imports$ ) ( $ADT::__StructureBrackets$ $Ident::Directive$ t.$Index::FromSpace$ $Ident::From$ ) ( $ADT::__StructureBrackets$ $Ident::Name$ t.$Index::NameSpace$ e.$Index::Import$ ) ( $ADT::__StructureBrackets$ $Ident::Directive$ t.$Index::ExternSpace$ $Ident::Extern$ ) e.$Index::Tokens$ =
c 		( $ADT::__StructureBrackets$ $Ident::Directive$ t.$Index::FromSpace$ $Ident::Import$ ) ( $ADT::__StructureBrackets$ $Ident::Name$ t.$Index::NameSpace$ 'Cpp-SR-BE::' e.$Index::Import$ ) ( $ADT::__StructureBrackets$ $Ident::Punctuation$ ( $ADT::__StructureBrackets$ ) ';' ) ( $ADT::__StructureBrackets$ $Ident::Nothing$ t.$Index::ExternSpace$ ) <$Local::MPreprocessor::ExportFunctions$ t.$Index::SymTable$ ( $ADT::__StructureBrackets$ e.$Index::Imports$ ( $ADT::__StructureBrackets$ e.$Index::Import$ ) ) ( $ADT::__StructureBrackets$ e.$Index::Import$ ) e.$Index::Tokens$ > ;
c 	t.$Index::SymTable$ t.$Index::Imports$ ( $ADT::__StructureBrackets$ $Ident::Directive$ t.$Index::ExternSpace$ $Ident::Extern$ ) e.$Index::Tokens$ =
c 		( $ADT::__StructureBrackets$ $Ident::Nothing$ t.$Index::ExternSpace$ ) <$Local::MPreprocessor::ForwardFunctions$ t.$Index::SymTable$ t.$Index::Imports$ e.$Index::Tokens$ > ;
c 	t.$Index::SymTable$ t.$Index::Imports$ ( $ADT::__StructureBrackets$ $Ident::Directive$ t.$Index::EnumSpace$ $Ident::Enum$ ) e.$Index::Tokens$ =
c 		( $ADT::__StructureBrackets$ $Ident::Nothing$ t.$Index::EnumSpace$ ) <$Local::MPreprocessor::EmptyFunctions$ $Ident::Local$ t.$Index::SymTable$ t.$Index::Imports$ e.$Index::Tokens$ > ;
c 	t.$Index::SymTable$ t.$Index::Imports$ ( $ADT::__StructureBrackets$ $Ident::Directive$ t.$Index::EnumSpace$ $Ident::EEnum$ ) e.$Index::Tokens$ =
c 		( $ADT::__StructureBrackets$ $Ident::Nothing$ t.$Index::EnumSpace$ ) <$Local::MPreprocessor::EmptyFunctions$ $Ident::Entry$ t.$Index::SymTable$ t.$Index::Imports$ e.$Index::Tokens$ > ;
c 	t.$Index::SymTable$ t.$Index::Imports$ ( $ADT::__StructureBrackets$ $Ident::Name$ t.$Index::NameSpace$ e.$Index::Function$ ) ( $ADT::__StructureBrackets$ $Ident::Punctuation$ t.$Index::BracketSpace$ '{' ) e.$Index::Tokens$ =
c 		( $ADT::__StructureBrackets$ $Ident::Name$ t.$Index::NameSpace$ e.$Index::Function$ ) ( $ADT::__StructureBrackets$ $Ident::Punctuation$ t.$Index::BracketSpace$ '{' ) <$Local::MPreprocessor::ScanFunctionBody$ <$Local::MPreprocessor::AddForward$ t.$Index::SymTable$ e.$Index::Function$ > t.$Index::Imports$ e.$Index::Tokens$ > ;
c 	t.$Index::SymTable$ t.$Index::Imports$ ( $ADT::__StructureBrackets$ $Ident::EOF$ t.$Index::EOFSpace$ ) =
c 		<$Entry::MSymTable::Destroy$ t.$Index::SymTable$ > ( $ADT::__StructureBrackets$ $Ident::Nothing$ t.$Index::EOFSpace$ ) ;
c 	t.$Index::SymTable$ t.$Index::Imports$ =
c 		<$Entry::MSymTable::Destroy$ t.$Index::SymTable$ > ;
c 	t.$Index::SymTable$ t.$Index::Imports$ t.$Index::OtherToken$ e.$Index::Tokens$ =
c 		t.$Index::OtherToken$ <$Local::MPreprocessor::DoPreprocessBody$ t.$Index::SymTable$ t.$Index::Imports$ e.$Index::Tokens$ > ;
c }

b Local::MPreprocessor::PreprocessBody
c $Local::MPreprocessor::PreprocessBody$ {
c 	e.$Index::Tokens$ =
c 		<$Local::MPreprocessor::DoPreprocessBody$ <$Entry::MSymTable::Create$ > ( $ADT::__StructureBrackets$ ) e.$Index::Tokens$ > ;
c }

b Local::MPreprocessor::Preprocess
c $Local::MPreprocessor::Preprocess$ {
c 	( $ADT::__StructureBrackets$ s.$Index::MainDirective$ e.$Index::ModuleName$ ) e.$Index::Tokens$ =
c 		( $ADT::__StructureBrackets$ $Ident::Directive$ ( $ADT::__StructureBrackets$ ) s.$Index::MainDirective$ ) ( $ADT::__StructureBrackets$ $Ident::Name$ ( $ADT::__StructureBrackets$ ' ' ) 'Cpp-SR-BE::' e.$Index::ModuleName$ ) ( $ADT::__StructureBrackets$ $Ident::Punctuation$ ( $ADT::__StructureBrackets$ ) ';' ) <$Local::MPreprocessor::PreprocessBody$ e.$Index::Tokens$ > ( $ADT::__StructureBrackets$ $Ident::Directive$ ( $ADT::__StructureBrackets$ ) $Ident::End$ ) ( $ADT::__StructureBrackets$ $Ident::Name$ ( $ADT::__StructureBrackets$ ' ' ) 'Cpp-SR-BE::' e.$Index::ModuleName$ ) ( $ADT::__StructureBrackets$ $Ident::Punctuation$ ( $ADT::__StructureBrackets$ ) '.' ) ;
c }

b Local::MPreprocessor::CommonUnit
c $Local::MPreprocessor::CommonUnit$ {
c 	s.$Index::MainDirective$ e.$Index::FileName$ =
c 		<$Entry::InOut::WriteLine$ 'SCAN FILE ' e.$Index::FileName$ > <$Entry::MUnLexer::Write$ ( $ADT::__StructureBrackets$ <$Entry::MLocation::OutName$ e.$Index::FileName$ > ) <$Local::MPreprocessor::Preprocess$ ( $ADT::__StructureBrackets$ s.$Index::MainDirective$ <$Entry::MLocation::ModuleName$ e.$Index::FileName$ > ) <$Entry::MLexer::Tokens$ <$Entry::MLocation::SrcName$ e.$Index::FileName$ > > > > ;
c }

b Entry::MPreprocessor::Unit
c $Entry::MPreprocessor::Unit$ {
c 	( $ADT::__StructureBrackets$ e.$Index::FileName$ ) =
c 		<$Local::MPreprocessor::CommonUnit$ $Ident::Module$ e.$Index::FileName$ > ;
c }

b Entry::MPreprocessor::Program
c $Entry::MPreprocessor::Program$ {
c 	e.$Index::FileName$ =
c 		<$Local::MPreprocessor::CommonUnit$ $Ident::Program$ e.$Index::FileName$ > ;
c }

